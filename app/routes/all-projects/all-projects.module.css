.projects {
  width: 100vw;
  min-height: 100vh;
  margin-top: 60px;
  margin-bottom: 40px;
  /* padding-top: 60px; */
  padding-bottom: 40px;
  display: flex;
  justify-content: center;

  @media (--mediaTablet) {
    padding-top: 50px;
    padding-right: 80px;
    padding-left: 160px;
    height: auto;
    margin-top: 40px;
    margin-bottom: 20px;
  }

  @media (--mediaMobile) {
    margin-top: 0;
    padding-top: var(--space4XL);
    overflow-x: hidden;
  }

  @media (--mediaMobile), (--mediaMobileLS) {
    padding-right: var(--spaceOuter);
    padding-left: var(--spaceOuter);
  }

  @media (max-width: 820px) and (max-height: 420px) {
    padding-right: var(--space4XL);
    padding-left: var(--space4XL);
  }
}

.header {
  padding-bottom: var(--space2XL);
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: left;

  @media (--mediaMobileLS) {
    padding-top: 0;
    padding-bottom: 0;
  }
}

.heading {
  white-space: nowrap;
  overflow: hidden;
}

.content {
  display: grid;
  grid-column-gap: var(--space2XL);
  max-width: var(--maxWidthL);
  width: 100%;
  margin: 0 var(--space4XL);
  padding-left: 0px;

  @media (--mediaDesktop) {
    padding-left: 0px;
  }

  @media (--mediaLaptop) {
    padding-left: 70px;
  }
  @media (--mediaTablet) {
    grid-template-columns: 100%;
    margin: 0;
    padding-left: 0;
  }
}

.grid {
  --verticalPadding: var(--space4XL);
  display: grid;
  align-items: start;
  grid-template-columns: 1fr;
  height: 100%;
  grid-template-columns: auto auto;
  gap: var(--space4XL);

  @media (--mediaDesktop) {
    --verticalPadding: var(--spaceOuter);
    grid-template-columns: auto auto;
    gap: var(--space4XL);
  }

  @media (--mediaLaptop) {
    grid-template-columns: auto auto;
    gap: var(--spaceXL);
    padding-bottom: var(--space3XL);
  }

  @media (--mediaMobileLS), (--mediaMobile) {
    gap: var(--space2XL);
    grid-template-columns: auto;
    padding-bottom: var(--spaceXL);
  }
}

.project {
  --featuredPostPadding: var(--space5XL);
  --featuredPostClip: polygon(0 0, calc(100% - 32px) 0, 100% 32px, 100% 100%, 0 100%);
  --postBorder: 1px solid color-mix(in lab, var(--text) 10%, transparent);

  position: relative;
  isolation: isolate;
  border-top: var(--postBorder);
  height: 600px;
  transform: scale(1); /* Ensure initial scale is 1 */
  transition: transform var(--durationM) var(--bezierFastoutSlowin); /* Smooth transition for transform */
  will-change: transform; /* Hint to the browser for performance */

  &:last-child {
    border-bottom: var(--postBorder);
  }

  @media (--mediaDesktop) {
    --featuredPostPadding: var(--space4XL);
  }

  @media (--mediaLaptop) {
    --featuredPostPadding: var(--space3XL);
  }

  @media (--mediaTablet) {
    --featuredPostPadding: var(--spaceXL);
  }

  @media (--mediaMobile), (--mediaMobileLS) {
    --featuredPostPadding: var(--spaceOuter);
  }
  @media (--mediaUseMotion) {
    &:hover { /* Apply zoom effect directly to .project */
      transform: scale(1.02); /* Zoom in by 2% on hover */
    }
  }
}

.postLabel,
.sideTag {
  --labelTagPadding: var(--spaceM);

  position: absolute;
  background-color: var(--background);
  padding: var(--spaceXS) var(--labelTagPadding);
  z-index: var(--zIndex1);
  color: transparent;

  @media (--mediaMobile) {
    --labelTagPadding: var(--spaceS);
  }
}

@keyframes labelIn {
  from {
    color: transparent;
    transform: translateY(-100%);
  }

  to {
    color: var(--colorTextLight);
    transform: translateY(-50%);
  }
}

.postLabel {
  top: 0;
  left: calc((var(--labelTagPadding) * -1) + var(--featuredPostPadding));
  transform: translateY(-100%);

  @media (--mediaUseMotion) {
    animation: labelIn 0.8s ease 0.5s forwards;
  }

  @media (--mediaReduceMotion) {
    transform: translateY(-50%);

    &:global {
      animation: fade-in 0.8s ease 0.5s forwards;
    }
  }
}

@keyframes tagIn {
  from {
    color: transparent;
    transform: translateX(100%) rotate(-90deg);
  }

  to {
    color: var(--colorTextLight);
    transform: translateX(50%) rotate(-90deg);
  }
}

.sideTag {
  top: 30%;
  right: 0;
  transform: translateX(100%) rotate(-90deg);

  @media (--mediaUseMotion) {
    animation: tagIn 0.8s ease 0.5s forwards;
  }

  @media (--mediaReduceMotion) {
    transform: translateX(50%) rotate(-90deg);

    &:global {
      animation: fade-in 0.8s ease 0.5s forwards;
    }
  }
}

.postLink {
  --linkPadding: var(--space3XL);
  display: flex;
  position: relative;
  align-items: flex-end;
  height: 100%;
  padding: var(--linkPadding) 0;

  @media (--mediaLaptop) {
    --linkPadding: var(--space2XL);
  }
}

.postDetails {
  position: relative;
  display: grid;
  justify-items: start;
  gap: var(--spaceL);
  width: 100%;
  margin: 20px;
}

.postDate {
  display: grid;
  grid-auto-flow: row dense; /* makes grid items flow and wrap */
  grid-template-columns: repeat(auto-fit, minmax(138px, auto)); /* flexible columns */
  gap: var(--spaceM);
  align-items: center;
  color: var(--glow);
  width: 100%;
  margin-bottom: var(--spaceS);
}

.postDateText {
  width: 170px;
}

.postImage {
  position: absolute;
  inset: 0;
  display: grid;
  place-content: stretch;
  overflow: hidden;
  isolation: isolate;
  clip-path: var(--featuredPostClip);
  opacity: 0;
  transform: scale(1); /* Ensure initial scale is 1 */
  transition: transform var(--durationM) var(--bezierFastoutSlowin); /* Smooth transition for transform */
  will-change: transform; /* Hint to the browser for performance */

  &:global {
    animation: fade-in 1s var(--bezierFastoutSlowin) forwards 0.2s;
  }

  &::after {
    content: '';
    position: absolute;
    inset: 0;

    @supports (linear-gradient(in lab, red, red)) {
      background: linear-gradient(
        in lab -135deg,
        color-mix(in lab, var(--backgroundLight) 50%, transparent) 0%,
        color-mix(in lab, var(--backgroundLight) 86%, transparent) 60%,
        color-mix(in lab, var(--backgroundLight) 90%, transparent) 100%
      );
    }

    background: linear-gradient(
      -135deg,
      color-mix(in lab, var(--backgroundLight) 50%, transparent) 0%,
      color-mix(in lab, var(--backgroundLight) 86%, transparent) 60%,
      color-mix(in lab, var(--backgroundLight) 90%, transparent) 100%
    );
  }

  @media (--mediaUseMotion) {
    .project:hover & :where(img, video) {
      transform: scale(1.03);
    }
  }

  & img,
  & video {
    transition: transform var(--durationXL) var(--bezierFastoutSlowin);
    object-fit: cover;
    height: 100%;
  }
}

.postTitle
{
  font-size: var(--fontSizeH3);
}

.postFooter {
  display: flex;
  grid-auto-flow: column;
  justify-content: space-between;
  justify-self: stretch;
  flex-wrap: wrap;
  gap: var(--spaceS);

  & button {
    position: relative;
    left: -8px;
  }
}

.barcode {
  opacity: 0;
  z-index: -10;

  &:global {
    animation: fade-in 0.8s var(--bezierFastoutSlowin) forwards 0.4s;
  }
}